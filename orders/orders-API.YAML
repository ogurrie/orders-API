--- 
components: 
  parameters: 
    PageLimit: 
      description: "Limits the number of items on a page"
      in: query
      name: limit
      schema: 
        type: integer
    PageOffset: 
      description: "Specifies the page number of orders to be displayed"
      in: query
      name: offset
      schema: 
        type: integer
    PageOrderID:
      description: "Specifies the order to filter by"
      in: query
      name: orderID
      schema: 
        type: integer
    PageCustomerID:
      description: "Specifies the customer to filter by"
      in: query
      name: customerID
      schema: 
        type: integer
  responses: 
    400Error: 
      content: 
        application/json: 
          schema: 
            properties: 
              message: 
                type: string
            type: object
      description: "Invalid request"
  schemas: 
    Item: 
      properties: 
        name: 
          type: string
        price:
            type: number
      type: object
    Order: 
      properties: 
        orderID: 
          format: int64
          type: integer
        customerID: 
          format: int64
          type: integer
        name: 
          type: string
        shipped_status: 
          type: boolean      
        address: 
          type: string
        item_list: 
          items: 
            $ref: "#/components/schemas/Item"
          type: array
      type: object
  securitySchemes: 
    BasicAuth: 
      scheme: basic
      type: http
info: 
  description: "An API to produce a list of orders"
  title: "Orders API"
  version: "1.0.0"
openapi: "3.0.0"
paths: 
  /orders: 
    get: 
      description: "Returns a list of orders"
      parameters: 
        - 
          $ref: "#/components/parameters/PageLimit"
        - 
          $ref: "#/components/parameters/PageOffset"
      responses: 
        ? "200"
        : 
          content: 
            application/json: 
              schema: 
                items: 
                  $ref: "#/components/schemas/Order"
                type: array
          description: "Successfully returned a list of orders"
        ? "400"
        : 
          $ref: "#/components/responses/400Error"
  /order: 
    get: 
      description: "Returns a specific order specified by an Order ID"
      parameters: 
        - 
          $ref: "#/components/parameters/orderID"
      responses: 
        ? "200"
        : 
          content: 
            application/json: 
              schema: 
                items: 
                  $ref: "#/components/schemas/Order"
                type: array
          description: "Successfully returned an order"
        ? "400"
        : 
          $ref: "#/components/responses/400Error"
  /update_status: 
    patch: 
      description: "Changed the status to shipped"
      parameters: 
        - 
          $ref: "#/components/parameters/orderID"
      responses: 
        ? "200"
        : 
          content: 
            application/json: 
              schema: 
                items: 
                  $ref: "#/components/schemas/Order"
                type: array
          description: "Successfully changed the shipped status"
        ? "400"
        : 
          $ref: "#/components/responses/400Error"
  /shipped_status: 
    get: 
      description: "Returns the orderID and the shipment status"
      parameters: 
        - 
          $ref: "#/components/parameters/orderID"
      responses: 
        ? "200"
        : 
          content: 
            application/json: 
              schema: 
                items: 
                  $ref: "#/components/schemas/Order"
                type: array
          description: "Successfully returned an orderID and shipment status"
        ? "400"
        : 
          $ref: "#/components/responses/400Error"
  /delete customer history: 
    delete: 
      description: "Returns a message if the customer order history deletion was successful"
      parameters: 
        - 
          $ref: "#/components/parameters/customerID"
      responses: 
        ? "200"
        : 
          content: 
            application/json: 
              schema: 
                items: 
                  $ref: "#/components/schemas/Order"
                type: array
          description: "Successfully deleted order history"
        ? "400"
        : 
          $ref: "#/components/responses/400Error"
  /delete orderID: 
    delete: 
      description: "Returns a message if the order deletion was successful"
      parameters: 
        - 
          $ref: "#/components/parameters/orderID"
      responses: 
        ? "200"
        : 
          content: 
            application/json: 
              schema: 
                items: 
                  $ref: "#/components/schemas/Order"
                type: array
          description: "Successfully deleted order"
        ? "400"
        : 
          $ref: "#/components/responses/400Error"
security: 
  - 
    BasicAuth: []
servers: 
  - 
    url: "https://example.io/v1"